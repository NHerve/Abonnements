// <auto-generated />
using System;
using AbonnementsAPi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AbonnementsAPi.Migrations
{
    [DbContext(typeof(AbonnementsAPIContext))]
    partial class AbonnementsAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("AbonnementsAPi.Models.Abonnements", b =>
                {
                    b.Property<int>("aboId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("aboDateDebut");

                    b.Property<DateTime>("aboDateFin");

                    b.Property<int>("aboFKCli");

                    b.Property<int>("aboFKMag");

                    b.Property<int>("aboStatus");

                    b.HasKey("aboId");

                    b.ToTable("Abonnements");
                });

            modelBuilder.Entity("AbonnementsAPi.Models.Clients", b =>
                {
                    b.Property<int>("cliId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("cliAuthKey");

                    b.Property<string>("cliCCV");

                    b.Property<DateTime?>("cliDateNaissance");

                    b.Property<string>("cliExpiCarte");

                    b.Property<string>("cliLieuNaissance");

                    b.Property<string>("cliMail")
                        .IsRequired();

                    b.Property<string>("cliNom")
                        .IsRequired();

                    b.Property<string>("cliNumCart");

                    b.Property<string>("cliPassword")
                        .IsRequired();

                    b.Property<string>("cliPhone")
                        .IsRequired();

                    b.Property<string>("cliPrenom")
                        .IsRequired();

                    b.HasKey("cliId");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("AbonnementsAPi.Models.Employer", b =>
                {
                    b.Property<int>("empId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("empLogin")
                        .IsRequired();

                    b.Property<string>("empPassword")
                        .IsRequired();

                    b.HasKey("empId");

                    b.ToTable("Employer");
                });

            modelBuilder.Entity("AbonnementsAPi.Models.Historique", b =>
                {
                    b.Property<int>("hisId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("hisDate");

                    b.Property<int>("hisFKCli");

                    b.Property<int>("hisFKEmp");

                    b.Property<string>("hisMotif")
                        .IsRequired();

                    b.Property<string>("hisMoyen")
                        .IsRequired();

                    b.HasKey("hisId");

                    b.ToTable("Historique");
                });

            modelBuilder.Entity("AbonnementsAPi.Models.Log", b =>
                {
                    b.Property<int>("logId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("logDate");

                    b.Property<string>("logDescription")
                        .IsRequired();

                    b.HasKey("logId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("AbonnementsAPi.Models.Magazines", b =>
                {
                    b.Property<int>("magId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("magDescription")
                        .IsRequired();

                    b.Property<int>("magNbVolumeAnnee");

                    b.Property<string>("magPhotoCouverture");

                    b.Property<decimal>("magPrixAnnuel");

                    b.Property<string>("magTitre")
                        .IsRequired();

                    b.HasKey("magId");

                    b.ToTable("Magazines");
                });
#pragma warning restore 612, 618
        }
    }
}
